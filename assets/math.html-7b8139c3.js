import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-a6f1e5c2.js";const p={},c=t(`<h1 id="javascript中的算术" tabindex="-1"><a class="header-anchor" href="#javascript中的算术" aria-hidden="true">#</a> JavaScript中的算术</h1><div class="hint-container info"><p class="hint-container-title">概述</p><p>JavaScript程序使用语言提供的算术操作符来操作数值，包括表示加法的 <code>+</code> ，表示减法的 <code>-</code> ，表示乘法的 <code>*</code>，表示除法的 <code>//</code>和表示取模（做除后的余数）的 <code>%</code>。ES2016 增加了取幂的 <code>**</code>。<br> 除了上述基本的算术操作符之外，JavaScript还通过Math对象的属性提供了一组函数和常量，以支持更复杂的数学计算。</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
    Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">)</span>              <span class="token comment">// =&gt; 9007199254740992 : 2的52 次方;</span>
    Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">.6</span><span class="token punctuation">)</span>              <span class="token comment">// =&gt; 1.0: 舍入到最接近的整数</span>
    Math<span class="token punctuation">.</span><span class="token function">cell</span><span class="token punctuation">(</span><span class="token number">.6</span><span class="token punctuation">)</span>               <span class="token comment">// =&gt; 1.0: 向上舍入到一个整数</span>
    Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">.6</span><span class="token punctuation">)</span>              <span class="token comment">// =&gt; 0.0: 向下舍入到一个整数</span>
    Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>                <span class="token comment">// =&gt; 5: 绝对值</span>
    Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span>             <span class="token comment">// 返回最大参数</span>
    Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span>             <span class="token comment">// 返回最小参数</span>
    Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token comment">// 伪随机数x,其中 0 &lt;= x &lt; 1.0</span>
    Math<span class="token punctuation">.</span><span class="token constant">PI</span>                     <span class="token comment">// π: 圆周率</span>
    Math<span class="token punctuation">.</span><span class="token constant">E</span>                      <span class="token comment">// e: 自然对数的底数</span>
    Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                <span class="token comment">// =&gt; 3**0.5: 3的平方根</span>
    Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span>             <span class="token comment">// =&gt; 3**1/3: 3的立方根</span>
    Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                 <span class="token comment">// 三角函数： 还有 Math.cos,Math.atan等</span>
    Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">// 10的自然对数</span>
    Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">LN10</span>     <span class="token comment">// 以10为底100的对数</span>
    Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">LN2</span>      <span class="token comment">// 以2为底512的对数</span>
    Math<span class="token punctuation">.</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                 <span class="token comment">// Math.E 的立方</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ES6在Math对象上又定义了一批函数</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
    Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">)</span>               <span class="token comment">// =&gt; 3: 立方根</span>
    Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>             <span class="token comment">// =&gt; 5: 所有参数平方和的平方根</span>
    Math<span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>             <span class="token comment">// =&gt; 2: 以10为底的对数</span>
    Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>             <span class="token comment">// =&gt; 10: 以2为底的对数</span>
    Math<span class="token punctuation">.</span><span class="token function">log1p</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>               <span class="token comment">// (1+x)的自然对数；精确到非常小的x</span>
    Math<span class="token punctuation">.</span><span class="token function">expm1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>               <span class="token comment">// Math.exp(x) - 1; Math.log1p()的逆运算 </span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>                <span class="token comment">// 对 &lt;, == 或 &gt;0 的参数返回 -1, 0 或 1</span>
    Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>              <span class="token comment">// =&gt; 6: 优化的32位整数乘法</span>
    Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">0xf</span><span class="token punctuation">)</span>             <span class="token comment">// =&gt; 28: 32位整数中前导0的位数</span>
    Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span>             <span class="token comment">// =&gt; 3: 剪掉分数部分得到的整数</span>
    Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>              <span class="token comment">// 舍入到最接近的32位浮点数</span>
    Math<span class="token punctuation">.</span><span class="token function">sinh</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>                <span class="token comment">// 双曲线正弦，还有Math.cosh()和Math.tanh()</span>
    Math<span class="token punctuation">.</span><span class="token function">asinh</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>               <span class="token comment">// 双曲线的反正弦，还有Math.acosh()和Math.atanh()</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">提示</p><pre><code>JavaScript中的算术在遇到上溢出，下溢出或被零除时不会发生错误。（详情在《JavaScript权威指南》 P28 )  

JavaScript 预定义了全局常量 Infinity 和 NaN 以对应正无穷和非数值。 可通过Number 对象的属性获取。  
</code></pre><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span>                         <span class="token comment">// =&gt; Infinity</span>
    Number<span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span> <span class="token operator">*</span> <span class="token number">2</span>        <span class="token comment">// =&gt; Infinity</span>
    
    Number<span class="token punctuation">.</span><span class="token number">NaN</span>                  <span class="token comment">// 非数值</span>
    <span class="token number">0</span><span class="token operator">/</span><span class="token number">0</span>                         <span class="token comment">// =&gt; NaN</span>

    <span class="token comment">//ES6定义了一下Number属性</span>
    Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>           <span class="token comment">// 同全局parseInt()函数</span>
    Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment">// 同全局parseFloat()函数</span>
    Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>              <span class="token comment">// 判断 x 是不是NaN</span>
    Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>          <span class="token comment">// 判断 x 是数值还是无穷</span>
    Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>         <span class="token comment">// 判断 x 是不是整数</span>
    Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>     <span class="token comment">//</span>
    Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span>     <span class="token comment">// =&gt; -(2**53 - 1)</span>
    Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span>     <span class="token comment">// =&gt; 2**53 - 1</span>
    Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span>              <span class="token comment">// =&gt; 2**-52: 数值与数值之间最小的差</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>非数值在JavaScript中有一个不同寻常的特性： 它与任何值比较都不相等，也不等于自己。这意味着不能通过<br> x === NaN 来确定某个变量x的值是NaN。</p></div>`,6),e=[c];function o(l,i){return s(),a("div",null,e)}const m=n(p,[["render",o],["__file","math.html.vue"]]);export{m as default};
