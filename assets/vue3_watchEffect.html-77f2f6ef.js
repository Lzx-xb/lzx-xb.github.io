const t=JSON.parse('{"key":"v-4467570d","path":"/posts/vue/vue3_watchEffect.html","title":"vue3_watchEffect","lang":"en-US","frontmatter":{"icon":"tag","date":"2023-02-14T00:00:00.000Z","title":"vue3_watchEffect","category":["vue"],"tag":["watchEffect"],"description":"wachtEffect() watch的套路是：既要指明监听的属性，也要指明监听的回调 watchEffect的套路是： 不用指明监听哪个属性，监听的回调中用到哪个属性，那就监视哪个属性。 const todoId = ref(1) const data = ref(null) watch(todoId, async () =&gt; { const response = await fetch( `https://jsonplaceholder.typicode.com/todos/${todoId.value}` ) data.value = await response.json() }, { immediate: true })","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/Lzx-xb/lzx-xb.github.io/zh/posts/vue/vue3_watchEffect.html"}],["meta",{"property":"og:url","content":"https://github.com/Lzx-xb/lzx-xb.github.io/posts/vue/vue3_watchEffect.html"}],["meta",{"property":"og:site_name","content":"漫步人生路"}],["meta",{"property":"og:title","content":"vue3_watchEffect"}],["meta",{"property":"og:description","content":"wachtEffect() watch的套路是：既要指明监听的属性，也要指明监听的回调 watchEffect的套路是： 不用指明监听哪个属性，监听的回调中用到哪个属性，那就监视哪个属性。 const todoId = ref(1) const data = ref(null) watch(todoId, async () =&gt; { const response = await fetch( `https://jsonplaceholder.typicode.com/todos/${todoId.value}` ) data.value = await response.json() }, { immediate: true })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-05T13:48:06.000Z"}],["meta",{"property":"article:author","content":"漫步人生路"}],["meta",{"property":"article:tag","content":"watchEffect"}],["meta",{"property":"article:published_time","content":"2023-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-05T13:48:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3_watchEffect\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-05T13:48:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"漫步人生路\\",\\"url\\":\\"https://lzx-xb.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1676430247000,"updatedTime":1696513686000,"contributors":[{"name":"lzx-xb","email":"321337450@qq.com","commits":2}]},"readingTime":{"minutes":0.75,"words":225},"filePathRelative":"posts/vue/vue3_watchEffect.md","localizedDate":"February 14, 2023","excerpt":"<h1> wachtEffect()</h1>\\n<ul>\\n<li>watch的套路是：既要指明监听的属性，也要指明监听的回调</li>\\n<li>watchEffect的套路是： 不用指明监听哪个属性，监听的回调中用到哪个属性，那就监视哪个属性。</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> todoId <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> data <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token function\\">watch</span><span class=\\"token punctuation\\">(</span>todoId<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">https://jsonplaceholder.typicode.com/todos/</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>todoId<span class=\\"token punctuation\\">.</span>value<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span>\\n  <span class=\\"token punctuation\\">)</span>\\n  data<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">immediate</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
